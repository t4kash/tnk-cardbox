/*! ngcsv 17-01-2014 */
!function(){angular.module("ngCsv.config",[]).value("ngCsv.config",{debug:!0}).config(["$compileProvider",function(a){angular.isDefined(a.urlSanitizationWhitelist)?a.urlSanitizationWhitelist(/^\s*(https?|ftp|mailto|file|data):/):a.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|file|data):/)}]),angular.module("ngCsv.directives",[]),angular.module("ngCsv",["ngCsv.config","ngCsv.directives","ngSanitize"]),angular.module("ngCsv.directives",[]).directive("ngCsv",["$parse",function(){return{restrict:"AC",replace:!0,transclude:!0,scope:{data:"&ngCsv",filename:"@filename",header:"&csvHeader",txtDelim:"@textDelimiter",fieldSep:"@fieldSeparator",ngClick:"&"},controller:["$scope","$element","$attrs","$transclude",function(a){a.csv="",a.$watch(function(){a.buildCsv()},!0),a.buildCsv=function(){var b=a.data(),c="data:text/csv;charset=utf-8,",d=a.header();if(d){var e=[];angular.forEach(d,function(a){this.push(a)},e);var f=e.join(a.fieldSep||",");c+=f+"\r\n"}return angular.forEach(b,function(d,e){var f=[];angular.forEach(d,function(b){"string"==typeof b&&a.txtDelim&&(b=a.txtDelim+b+a.txtDelim),this.push(b)},f),dataString=f.join(a.fieldSep||","),c+=e<b.length?dataString+"\r\n":dataString}),a.csv=encodeURI(c),a.csv},a.getFilename=function(){return a.filename||"download.csv"}}],template:'<div class="csv-wrap"><div class="element" ng-transclude></div><a class="hidden-link" ng-hide="true" ng-href="{{ csv }}" download="{{ getFilename() }}"></a></div>',link:function(a,b){var c=angular.element(b.children()[0]),d=angular.element(b.children()[1]);c.bind("click",function(){d[0].click(),a.ngClick&&a.ngClick()})}}}])}(window,document);